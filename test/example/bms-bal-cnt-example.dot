digraph {
    rankdir="LR";
    subgraph cluster_BAL {
        label="BAL";
        rank="same";
        bal_top [style=invisible];
        /* Private Function Nodes */
        bal_CheckStateRequest [label="bal_CheckStateRequest"];
        bal_GetStateRequest [label="bal_GetStateRequest"];
        bal_TransferStateRequest [label="bal_TransferStateRequest"];
        bal_CheckReEntrance [label="bal_CheckReEntrance"];
        bal_Init [label="bal_Init"];
        bal_Deactivate [label="bal_Deactivate"];
        bal_Activate_Balancing_Voltage [label="bal_Activate_Balancing_Voltage"];
    }

    subgraph cluster_BMS {
        label="BMS";
        rank="same";
        bms_top [style=invisible];
        /* Private Function Nodes */
        bms_CheckStateRequest [label="bms_CheckStateRequest"];
        bms_GetStateRequest [label="bms_GetStateRequest"];
        bms_TransferStateRequest [label="bms_TransferStateRequest"];
        bms_CheckReEntrance [label="bms_CheckReEntrance"];
        bms_CheckCANRequests [label="bms_CheckCANRequests"];
        bms_CheckAnyErrorFlagsSet [label="bms_CheckAnyErrorFlagsSet"];
        bms_UpdateBatsysState [label="bms_UpdateBatsysState"];
        bms_GetMeasurementValues [label="bms_GetMeasurementValues"];
        bms_CheckVoltages [label="bms_CheckVoltages"];
        bms_CheckTemperatures [label="bms_CheckTemperatures"];
        bms_CheckCurrent [label="bms_CheckCurrent"];
        bms_CheckSlaveTemperatures [label="bms_CheckSlaveTemperatures"];
        bms_CheckOpenSenseWire [label="bms_CheckOpenSenseWire"];
    }

    subgraph cluster_CNT {
        label="CNT";
        rank="same";
        cnt_top [style=invisible];
        /* Private Function Nodes */
        cnt_NewStandbyRequestExists [label="cnt_NewStandbyRequestExists"];
        cnt_NewErrorRequestExists [label="cnt_NewErrorRequestExists"];
        cnt_CloseMainPlustWithPrecharge [label="cnt_CloseMainPlustWithPrecharge"];
        cnt_IsReentry [label="cnt_IsReentry"];
        cnt_CheckAllContactorsFeedback [label="cnt_CheckAllContactorsFeedback"];
        cnt_CheckStateRequest [label="cnt_CheckStateRequest"];
        cnt_GetStateRequest [label="cnt_GetStateRequest"];
        cnt_TransferStateRequest [label="cnt_TransferStateRequest"];
        cnt_TestLatchingContactorChannels [label="cnt_TestLatchingContactorChannels"];
        cnt_TestAllContactorChannels [label="cnt_TestAllContactorChannels"];
        cnt_SaveContactorStateToDatabase [label="cnt_SaveContactorStateToDatabase"];
        cnt_SaveContactorSubStateToDatabase [label="cnt_SaveContactorSubStateToDatabase"];

        /* Public Function Nodes */
        CNT_Init [label="CNT_Init"];
        CNT_CheckPrecharge [label="CNT_CheckPrecharge"];
        CNT_CheckFuse [label="CNT_CheckFuse"];
        CNT_AcquireContactorFeedbacks [label="CNT_AcquireContactorFeedbacks"];
        CNT_GetAllContactorFeedbacks [label="CNT_GetAllContactorFeedbacks"];
        CNT_GetOneContactorFeedback [label="CNT_GetOneContactorFeedback"];
        CNT_GetContactorSetValue [label="CNT_GetContactorSetValue"];
        CNT_GetContactorState [label="CNT_GetContactorState"];
        CNT_SetContactorState_pulse [label="CNT_SetContactorState_pulse"];
        CNT_SwitchAllContactorsOff [label="CNT_SwitchAllContactorsOff"];
        CNT_GetState [label="CNT_GetState"];
        CNT_GetInitializationState [label="CNT_GetInitializationState"];
        CNT_GetActivePowerLine [label="CNT_GetActivePowerLine"];
    }

    bal_top -> bms_top -> cnt_top [style=invisible,dir=none];
}
